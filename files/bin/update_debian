#!/bin/bash

# checkrestart requires package debian-goodies.
# /var/run/reboot-required requires package update-notifier-common.


function main() {
  /usr/local/bin/stamp
  aptitude_update; update_ret="${?}"
  aptitude_upgrade; upgrade_ret="${?}"
  check_old_code; checkrestart_ret="${?}"
  autoclean; autoclean_ret="${?}"
  update_python; python_ret="${?}"
  update_kanboard; kanboard_ret="${?}"
  update_rpi; rpi_ret="${?}"

  if ! test 0 = "${checkrestart_ret}"; then 
    fail $ERR_REBOOT "Reboot required: (${checkrestart_ret})"
  elif ! test 0 = "${update_ret}"; then 
    fail $ERR_UPDATE "Updates failed: ${update_ret}"
  elif ! test 0 = "${upgrade_ret}"; then 
    fail $ERR_UPGRADE "Upgrades failed: ${upgrade_ret}"
  elif ! test 0 = "${autoclean_ret}"; then 
    fail $ERR_AUTOCLEAN "Autoclean failed: ${autoclean_ret}"
  elif ! test 0 = "${python_ret}"; then
    fail $ERR_PYTHON "Python updates failed: ${python_ret}"
  elif ! test 0 = "${kanboard_ret}"; then
    fail $ERR_KANBOARD "kanboard update failed: ${kanboard_ret}"
  elif ! test 0 = "${rpi_ret}"; then
    fail $ERR_RPI_UPDATE "rpi-update failed: ${rpi_ret}"
  fi

  output "Success."
  /usr/local/bin/stamp
}



function aptitude_update() {
  /usr/bin/aptitude update \
    && output "Updates successful."
}


function aptitude_upgrade() {
  DEBIAN_FRONTEND=noninteractive /usr/bin/aptitude -o DPkg::Options::=--force-confdef full-upgrade -y \
    && echo -e "Upgrades successful."
}


function check_old_code() {
  checkrestart_output="$(/usr/sbin/checkrestart)"
  grep '^service ' <<< "${checkrestart_output}" \
    | while read service_line; do
      if ! eval "${service_line}"; then
        error "Service restart returned: ${?}; service line: '${service_line}'"
        return $ERR_CHECKRESTART_SERVICE 
      fi
    done
  output "Service restarts returned true."

  if grep -q 'do not seem to have an associated init script' <<< "${checkrestart_output}"; then
    error "Reboot required due to old code with no associated service."
    return $ERR_CHECKRESTART
  fi

  if test -e /var/run/reboot-required; then
    error "Reboot required."
    return $ERR_REBOOT 
  fi
  output "No reboot required."
}


function autoclean() {
  /usr/bin/aptitude autoclean -y \
    && output "Autoclean successful."
}


function update_python() {
  if test -e /usr/local/bin/update_python_packages; then
    /usr/local/bin/update_python_packages \
      && output "Python updates successful."
  else
    output "Python updates skipped."
  fi
}


function update_kanboard() {
  if test -e /usr/local/bin/update_kanboard; then
    /usr/local/bin/update_kanboard \
      && echo -e "Kanboard update successful."
  else
    echo -e "Kanboard update skipped."
  fi
}


function update_rpi() {
  # https://github.com/Hexxeh/rpi-firmware/issues/109
  # https://www.raspberrypi.org/forums/viewtopic.php?f=28&t=137442&p=913294
  # Avoid a kernel bug that breaks cryptsetup.
  #if test -e /usr/bin/rpi-update; then
  #  /usr/bin/rpi-update 2ea8550c0fc6f4b916b3698fad857138d8a2da64 \
  #    && output "rpi-update successful."
  #else
  #  output "rpi-update skipped."
  #fi
  true
}


function fail() {
  error "${2}"
  /usr/local/bin/stamp
  exit ${1}
}


function error() {
  output "ERROR:  ${1}" >&2
}


function output() {
  printf '%s\n' "${1}"
}


PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

#echo "DEBUG:  PATH=${PATH}"
#echo "DEBUG:  SHELL=${SHELL}"
#echo "DEBUG:  \$0=${0}"

                     ERR_UPDATE=1
                    ERR_UPGRADE=2
               ERR_CHECKRESTART=3
       ERR_CHECKRESTART_SERVICE=4
                     ERR_REBOOT=5
                  ERR_AUTOCLEAN=6
                     ERR_PYTHON=7
                   ERR_KANBOARD=8
                 ERR_RPI_UPDATE=9


main
