#!/bin/bash


function main() {
  /usr/local/bin/stamp
  ntp-wait
  /usr/local/bin/stamp
  aptitude_update; update_ret="${?}"
  aptitude_upgrade; upgrade_ret="${?}"
  check_old_code; checkrestart_ret="${?}"
  autoclean; autoclean_ret="${?}"
  update_python; python_ret="${?}"
  update_kanboard; kanboard_ret="${?}"
  update_rpi; rpi_ret="${?}"

  if ! test 0 = "${checkrestart_ret}"; then 
    fail $ERR_REBOOT "Reboot required: (${checkrestart_ret})"
  elif ! test 0 = "${update_ret}"; then 
    fail $ERR_UPDATE "Updates failed: ${update_ret}"
  elif ! test 0 = "${upgrade_ret}"; then 
    fail $ERR_UPGRADE "Upgrades failed: ${upgrade_ret}"
  elif ! test 0 = "${autoclean_ret}"; then 
    fail $ERR_AUTOCLEAN "Autoclean failed: ${autoclean_ret}"
  elif ! test 0 = "${python_ret}"; then
    fail $ERR_PYTHON "Python updates failed: ${python_ret}"
  elif ! test 0 = "${kanboard_ret}"; then
    fail $ERR_KANBOARD "kanboard update failed: ${kanboard_ret}"
  elif ! test 0 = "${rpi_ret}"; then
    fail $ERR_RPI_UPDATE "rpi-update failed: ${rpi_ret}"
  fi

  output "Success."
  /usr/local/bin/stamp
}



function aptitude_update() {
  /usr/bin/aptitude update \
    && output "Updates successful."
}


function aptitude_upgrade() {
  DEBIAN_FRONTEND=noninteractive /usr/bin/aptitude -o DPkg::Options::=--force-confdef full-upgrade -y \
    && echo -e "Upgrades successful."
}


function check_old_code() {
  # Try to restart code automatically.
  needrestart -qr a

  # needrestart is unable to determine the expected kernel version on buttons
  # (Ubuntu on Jetson Nano), 2023-01-31.  Don't boot loop.
  if needrestart -b | grep -q '^NEEDRESTART-KEXP:'; then
    if ! needrestart -qkp; then
      error "Reboot required (kernel)."
      return $ERR_KERNEL
    fi
  fi

  if ! needrestart -qlp; then
    error "Reboot required (userland)."
    return $ERR_USERLAND
  fi
  output "No reboot required."
}


function autoclean() {
  /usr/bin/aptitude autoclean -y \
    && output "Autoclean successful."
}


function update_python() {
  if test -e /usr/local/bin/update_python_packages; then
    /usr/local/bin/update_python_packages \
      && output "Python updates successful."
  else
    output "Python updates skipped."
  fi
}


function update_kanboard() {
  if test -e /usr/local/bin/update_kanboard; then
    /usr/local/bin/update_kanboard \
      && echo -e "Kanboard update successful."
  else
    echo -e "Kanboard update skipped."
  fi
}


function update_rpi() {
  if test -e /usr/bin/rpi-update; then
    /usr/bin/rpi-update && output "rpi-update successful."
  else
    output "rpi-update skipped."
  fi
  true
}


function fail() {
  error "${2}"
  /usr/local/bin/stamp
  exit ${1}
}


function error() {
  output "ERROR:  ${1}" >&2
}


function output() {
  printf '%s\n' "${1}"
}


PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

                     ERR_UPDATE=1
                    ERR_UPGRADE=2
                     ERR_KERNEL=3
                   ERR_USERLAND=4
                     ERR_REBOOT=5
                  ERR_AUTOCLEAN=6
                     ERR_PYTHON=7
                   ERR_KANBOARD=8
                 ERR_RPI_UPDATE=9


main
